---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;
const { Content } = post ? await post.render() : { Content: null };
---

{post ? (
  <Layout title={post.data.title + ` â€” munawarjs.com`} description={post.data.description}>
    <main class="post mx-auto flex w-full flex-col gap-4">
      <header role="presentation" class="mb-8">
        <h1 class="text-3xl leading-10 text-white font-semibold mb-4">
          {post.data.title}
        </h1>
        <div class="text-slate-400 text-base">
          <time datetime={post.data.publishedAt}>{formatDate(post.data.publishedAt)}</time>
          <span> &bull; </span>
          {post.data.tags && post.data.tags.length > 0 && (
            <span>
              {post.data.tags.map((tag, index) => (
                <span>
                  <span key={index}>{tag}</span>
                  {post.data.tags.length - 1 !== index && (<span>, </span>)}
                </span>
              ))}
            </span>
          )}
        </div>
      </header>

      {Content && <Content />}
    </main>
  </Layout>
) : (
  <Layout title="Post Not Found" description="The requested post could not be found.">
    <main class="post mx-auto flex w-full flex-col gap-4">
      <h1 class="text-3xl leading-10 text-white font-semibold mb-4">Post Not Found</h1>
      <p>Sorry, the requested post could not be found.</p>
    </main>
  </Layout>
)}